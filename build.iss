; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Memrix"
#define MyEngineName "MemrixEngine"
#define MyAssetsName "Structure"
#define MyAppVersion "1.0.0"
#define MyAppVerName MyAppName + " v" + MyAppVersion
#define MyAppPublisher "AceKeppel"
#define MyAppURL "https://github.com/PlaxtonFlarion/MemNova"
#define MyAppExeName "memrix.exe"
#define MyAppBatName "memrix.bat"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt
#define MyAppId "{{4C6970DD-67E4-4FFA-88D1-01BD6E9CA1B8}}"


[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#MyAppId}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppVerName}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
DisableWelcomePage=no
LicenseFile=schematic\resources\documents\memrix_license.txt
InfoBeforeFile=schematic\resources\documents\memrix_before.txt
InfoAfterFile=schematic\resources\documents\memrix_after.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=.
OutputBaseFilename={#MyAppName}-windows-v{#MyAppVersion}
UninstallDisplayIcon={app}\{#MyEngineName}\schematic\resources\icons\memrix_delete_1.ico
SetupIconFile=schematic\resources\icons\memrix_setup_1.ico
WizardImageFile=schematic\resources\images\windows\memrix_192dpi_328_628.bmp
Compression=lzma
SolidCompression=yes
WizardStyle=modern


[Code]
procedure InitializeWizard();
begin
  WizardForm.WelcomeLabel1.Font.Name := 'Microsoft YaHei';
  WizardForm.WelcomeLabel1.Font.Size := 12;
  WizardForm.WelcomeLabel1.Font.Style := [fsBold];
  WizardForm.WelcomeLabel2.Font.Name := 'Microsoft YaHei';
  WizardForm.WelcomeLabel2.Font.Size := 10;
  WizardForm.WelcomeLabel2.Font.Style := [fsItalic];
end;

function InitializeSetup(): Boolean;
var
  MyKeyStillExist: Boolean;
  ResultCode: Integer;
  uicmd: String;
  userChoice: Integer;
begin
  Result := True;

  // 检查是否已安装旧版本
  if RegQueryStringValue(HKEY_LOCAL_MACHINE,
    'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\' + ExpandConstant('{#MyAppId}') + '_is1',
    'UninstallString', uicmd) then
  begin
    userChoice := MsgBox('检测到已安装 {#MyAppName} ，是否卸载后继续安装？', mbConfirmation, MB_YESNO);

    if userChoice = IDYES then
    begin
      if Exec(RemoveQuotes(uicmd), '', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then
      begin
        Sleep(2000); // 注册表反应时间

        MyKeyStillExist := RegKeyExists(HKEY_LOCAL_MACHINE,
          'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\' + ExpandConstant('{#MyAppId}') + '_is1');

        if MyKeyStillExist then
        begin
          Result := False;
          Exit;
        end;

        Sleep(3000); // 卸载成功后，延迟 3 秒再继续安装
      end
      else
      begin
        Result := False;
        Exit;
      end;
    end
    else
    begin
      Result := False;
      Exit;
    end;
  end;
end;


[Languages]
Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"


[Tasks]
;Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked


[Files]
Source: "applications\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "schematic\resources\automation\{#MyAppBatName}"; DestDir: "{app}"; Flags: ignoreversion
;Source: "applications\{#MyEngineName}\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
;Source: "schematic\*"; DestDir: "{app}\{#MyEngineName}\schematic"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files


[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""


[Icons]
;Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon; IconFilename: "{app}\{#MyEngineName}\schematic\resources\icons\memrix_icn_1.ico"
;Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
;Name: "{autoprograms}\Uninstall {#MyAppName}"; Filename: "{uninstallexe}"; IconFilename: "{app}\{#MyEngineName}\schematic\resources\icons\memrix_delete_1.ico"


[UninstallDelete]
Type: filesandordirs; Name: "{app}"; Check: IsAdmin;